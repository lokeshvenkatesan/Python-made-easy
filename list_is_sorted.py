# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kJaHSZMRu_oSTASVepXRv26ZbadEKPIL
"""

FACTORIAL

def fact(n):
  if n==0:
   return 1
  small= fact(n-1)
  return n * small

import sys
sys.setrecursionlimit(3000)

n= int(input())
#print(sum_n(n))
print(fact(n))
#one_to_n(n)
#n_to_one(n)





summation of n= n + summation (n -1 )

def sum_n(n):
  if (n==0):
    return 0
  assumption = sum_n(n -1)
  output = n + assumption
  return output

def one_to_n(n):
  if n==0:                          # 10.........  one_to_n(9)........ one_to_n(8).............0............... >1.........2.....3
    return
  one_to_n(n - 1)
  print(n)
  return

# n-1...n-1..... n-2...................n
#n...........n-1....n-2.......
def n_to_one(n):
  if n==0:
    return
  print(n)
  n_to_one(n -1)

1 1 2 3 5
fibo(n - 2) + fibo(n -1)

def fibo(n):
  if n==1 or n==2:
    return 1
  fibo_1= fibo(n -1)
  fibo_2 = fibo(n - 2)
  output = fibo_1 + fibo_2
  return output

n=int(input())
fibo(n)

Scenario 1: 1 2 3 4 5 6 7
Scenario 2: 12 1 2 3 4 5 6
Len 0 or 1-> True-> Base Case
1 2 3 4 5........999
998
997
996
.......................................

def issmaller(a):
  l= len(a)
  if l == 0 or l==1:
    return True
  if a[0]> a[1]:
    return False
  rest= a[1:]
  issmallint= issmaller(rest)
  if issmallint:
    return True
  else:
    return False

a= [1,2,30,4,5,6,7]
issmaller(a)

1 2 3 4 5

def isSorted(a,si):
  l= len(a)
  if si== l-1 or si== l:
    return True
  if a[si] > a[si+1]:
    return False
  betterimpl= isSorted(a, si+1)
  return betterimpl

a= [1,2,3,40,5]
isSorted(a, 0)